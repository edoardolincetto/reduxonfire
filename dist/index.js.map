{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9cc7211e331190c2ef20","webpack:///external \"firebase\"","webpack:///./src/index.js"],"names":["ReduxOnFire","config","firebaseApp","initializeApp","firebaseAuth","auth","firebaseStorage","storage","firebaseDatabase","database","dispatch","getState","email","password","type","createUserWithEmailAndPassword","then","user","currentUser","emailVerified","sendEmailVerification","catch","signInWithEmailAndPassword","signOut","error","actionName","recordName","toUpperCase","ref","on","snapshot","val","recordId","record","all","filter","value","id","length","child","recordContent","recordsName","array","forEach","finalObject","key","push","criteria","reverse","orderByChild","reference","initialDB","number","update","console","log","notificationFailed","notificationSuccess","notification","set","once","remove"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"firebase\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReduxOnFire\", [\"firebase\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxOnFire\"] = factory(require(\"firebase\"));\n\telse\n\t\troot[\"ReduxOnFire\"] = factory(root[\"firebase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9cc7211e331190c2ef20","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"firebase\"\n// module id = 0\n// module chunks = 0","import Firebase from 'firebase';\n\nclass ReduxOnFire {\n    constructor(config) {\n        this.firebaseApp = Firebase.initializeApp(config);\n        this.firebaseAuth = Firebase.auth();\n        this.firebaseStorage = Firebase.storage();\n        this.firebaseDatabase = Firebase.database();\n        this.dispatch = null;\n        this.getState = null;\n    }\n\n    signup(email, password) {\n        this.dispatch({ type: 'SIGNUP_REQUEST' });\n        return this.firebaseAuth.createUserWithEmailAndPassword(email, password)\n            .then(result => {\n                this.dispatch({ type: 'SIGNUP_SUCCESS' });\n                var user = this.firebaseAuth.currentUser;\n                if (!user.emailVerified) {\n                    user.sendEmailVerification();\n                }\n            })\n            .catch(error => {\n                this.dispatch({ type: 'SIGNUP_FAILED' })\n            });\n    }\n\n    login(email, password) {\n        this.dispatch({ type: 'LOGIN_REQUEST' });\n        return this.firebaseAuth.signInWithEmailAndPassword(email, password)\n            .then(result => {\n                this.dispatch({ type: 'LOGIN_SUCCESS' });\n            })\n            .catch(error => {\n                this.dispatch({ type: 'LOGIN_FAILED' })\n            });\n    }\n\n    logout() {\n        this.firebaseAuth.signOut().then(() => {\n            this.dispatch({ type: 'LOGOUT_SUCCESS' });\n        }, (error) => {\n            this.dispatch({ type: 'LOGOUT_FAILED' });\n        });\n    }\n\n    getRecord(actionName, recordName) {\n        var actionName = actionName.toUpperCase();\n        this.dispatch({type: 'GET_' + actionName + '_REQUEST'});\n\n        this.firebaseDatabase.ref(recordName).on('value',\n        (snapshot) => {\n            this.dispatch({\n                type: 'GET_' + actionName + '_SUCCESS',\n                [recordName]: snapshot.val()\n            });\n        },\n        (error) => {\n            this.dispatch({type: 'GET_' + actionName + '_FAILED'});\n        });\n    }\n\n    getRecordById(recordName, recordId) {\n        var actionName = recordName.toUpperCase();\n        this.dispatch({type: 'GET_' + actionName + '_REQUEST'});\n\n        const record = this.getState()[recordName].all.filter(value => {\n            return value.id == recordId ? true : false\n        });\n\n        if(record.length == 1) {\n            this.dispatch({\n                type: 'GET_' + actionName + '_CACHED',\n                [recordName]: record[0]\n            });\n        } else {\n            this.firebaseDatabase.ref(recordName).child(recordId).on('value',\n            (snapshot) => {\n                this.dispatch({\n                    type: 'GET_' + actionName,\n                    [recordName]: snapshot.val()\n                });\n            },\n            (error) => {\n                this.dispatch({type: 'GET_' + actionName + '_FAILED'});\n            });\n        }\n    }\n\n    getRecordByContent(recordName, recordContent) {\n        var actionName = recordName.toUpperCase();\n        return {\n            type: 'GET_' + actionName,\n            [recordName]: recordContent\n        }\n    }\n\n    getRecords(recordsName) {\n        var actionName = recordsName.toUpperCase();\n        this.dispatch({type: 'GET_' + actionName + '_REQUEST'});\n        this.firebaseDatabase.ref(recordsName).on('value',\n        (snapshot) => {\n            var array = [];\n            snapshot.forEach((child) => {\n                var finalObject = child.val();\n                if (finalObject.id) {\n                    finalObject.id = child.key;\n                }\n                array.push(finalObject);\n            });\n            this.dispatch({\n                type: 'GET_' + actionName + '_SUCCESS',\n                [recordsName]: array\n            });\n        },\n        (error) => {\n            this.dispatch({type: 'GET_' + actionName + '_FAILED'});\n        });\n    }\n\n    getRecordsOrdered(recordsName, criteria, reverse) {\n        var actionName = recordsName.toUpperCase();\n        this.dispatch({type: 'GET_' + actionName + '_REQUEST'});\n        this.firebaseDatabase.ref(recordsName).orderByChild(criteria).on('value',\n        (snapshot) => {\n            var array = [];\n            snapshot.forEach((child) => {\n                var finalObject = child.val();\n                finalObject.id = child.key;\n                array.push(finalObject);\n            });\n            this.dispatch({\n                type: 'GET_' + actionName + '_SUCCESS',\n                [recordsName]: reverse ? array.reverse() : array\n            });\n        },\n        (error) => {\n            this.dispatch({type: 'GET_' + actionName + '_FAILED'});\n        });\n    }\n\n    addRecordKey(recordName) {\n        var actionName = recordName.toUpperCase();\n        var reference = this.firebaseDatabase.ref().child(recordName).push().key;\n        var initialDB = {\n            number: '0/2016'\n        }\n\n        return this.firebaseDatabase.ref().child(recordName + '/' + reference).update(\n            initialDB,\n            (error) => {\n                if (error) {\n                    console.log(error);\n                } else {\n                    return dispatch({\n                        type: 'ADD_' + actionName,\n                        reference: reference\n                    });\n                }\n            }\n        );\n    }\n\n    addRecordWithContent(recordName, recordContent, notificationFailed, notificationSuccess) {\n        var actionName = recordName.toUpperCase();\n        this.dispatch({type: 'ADD_' + actionName + '_REQUEST'});\n        var reference = this.firebaseDatabase.ref().child(recordName).push().key;\n        return this.firebaseDatabase.ref().child(recordName + '/' + reference).update(\n            recordContent,\n            (error) => {\n                if (error) {\n                    return dispatch({type: 'ADD_' + actionName + '_FAILED', notification: notificationFailed});\n                } else {\n                    return dispatch({type: 'ADD_' + actionName + '_SUCCESS', notification: notificationSuccess});\n                };\n            }\n        );\n    }\n\n    updateRecord(recordName, recordId, recordContent, notificationFailed, notificationSuccess) {\n        var actionName = recordName.toUpperCase();\n        this.dispatch({type: 'UPDATE_' + actionName + '_REQUEST'});\n\n        if (recordId == null) {\n            var reference = this.firebaseDatabase.ref().child(recordName);\n        } else {\n            var reference = this.firebaseDatabase.ref().child(recordName + '/' + recordId);\n        }\n\n        return reference.update(\n            recordContent,\n            (error) => {\n                if (error) {\n                    if (notificationFailed) {\n                        this.dispatch({\n                            type: 'UPDATE_' + actionName + '_FAILED',\n                            notification: notificationFailed\n                        });\n                    }\n                } else {\n                    if (notificationSuccess) {\n                        this.dispatch({\n                            type: 'UPDATE_' + actionName + '_SUCCESS',\n                            [recordName]: recordContent,\n                            notification: notificationSuccess\n                        });\n                    }\n                };\n            }\n        );\n    }\n\n    setRecord(recordName, recordContent, notificationFailed, notificationSuccess) {\n        var actionName = recordName.toUpperCase();\n        this.dispatch({type: 'SET_' + actionName + '_REQUEST'});\n        var reference = this.firebaseDatabase.ref().child(recordName);\n        return reference.set(\n            recordContent,\n            (error) => {\n                if (error) {\n                    if (notificationFailed) {\n                        this.dispatch({\n                            type: 'SET_' + actionName + '_FAILED',\n                            notification: notificationFailed\n                        });\n                    }\n                } else {\n                    if (notificationSuccess) {\n                        this.dispatch({\n                            type: 'SET_' + actionName + '_SUCCESS',\n                            [recordName]: recordContent,\n                            notification: notificationSuccess\n                        });\n                    }\n                };\n            }\n        );\n    }\n\n    cloneRecord(recordName, recordId, notificationFailed, notificationSuccess) {\n        var actionName = recordName.toUpperCase();\n        this.dispatch({type: 'CLONE_' + actionName + '_REQUEST'})\n        const record = this.getState()[recordName].all.filter(value => {\n            return value.id == recordId ? true : false\n        });\n\n        if(record.length == 1) {\n            var reference = this.firebaseDatabase.ref(recordName).push().key;\n            return this.firebaseDatabase.ref(recordName).child(reference).update(\n                record[0],\n                (error) => {\n                    if (error) {\n                        return dispatch({type: 'CLONE_' + actionName + '_FAILED', notification: notificationFailed});\n                    } else {\n                        return dispatch({type: 'CLONE_' + actionName + '_SUCCESS', notification: notificationSuccess});\n                    };\n                }\n            );\n        } else {\n            this.firebaseDatabase.ref(recordName).child(recordId).once('value').then((snapshot) => {\n                var reference = this.firebaseDatabase.ref(recordName).push().key;\n                return this.firebaseDatabase.ref(recordName).child(reference).update(\n                    snapshot.val(),\n                    (error) => {\n                        if (error) {\n                            return dispatch({type: 'CLONE_' + actionName + '_FAILED', notification: notificationFailed});\n                        } else {\n                            return dispatch({type: 'CLONE_' + actionName + '_SUCCESS', notification: notificationSuccess});\n                        };\n                    }\n                );\n            });\n        }\n    }\n\n    deleteRecord(recordName, recordId, notificationSuccess) {\n        var actionName = recordName.toUpperCase();\n        this.firebaseDatabase.ref().child(recordName + '/' + recordId).remove();\n        return {\n            type: 'DELETE_' + actionName,\n            id: recordId,\n            notification: notificationSuccess\n        }\n    }\n\n    showNotification(notification) {\n        return {\n            type: 'SIMPLE_NOTIFICATION',\n            notification: notification\n        }\n    }\n\n}\n\nexport default ReduxOnFire;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}